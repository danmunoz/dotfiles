#! /usr/bin/env bash
source ./Scripts/Utilities/print-color

# Check for Homebrew and install if we don't have it
function setupHomebrew() {
  if ! command -v brew >/dev/null; then
    printMessage "*** Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  else
    printMessage "*** Homebrew already installed, updating"
    brew update
  fi
}

# Install Xcode
function installXcode() {
  printMessage "*** Installing mas-cli"
  brew install mas
  printMessage "*** Installing Xcode from Mac App Store"
  mas install 497799835
  sudo xcodebuild -license accept 
}

# Install Homebrew dependencies
function installHomebrewDependencies() {
  printMessage "*** Installing Homebrew dependencies"
  brew bundle
}

function copyDotfilesDir() {
  setupGitConfig;
  printMessage "*** Copying .dotfiles dir"
	 rsync --exclude ".git/" \
	 	--exclude ".DS_Store" \
	 	-avh --no-perms Scripts/dotfiles/ ~/.dotfiles;
}

function setupSimLinks() {
  printMessage "*** Setting up SymLinks"
  
  read -p "This operation will replace existing zshrc and gitconfig files. Do you wish to continue? (y/n) " -n 1
  echo ""
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    ln -sfn $HOME/.dotfiles/zshrc $HOME/.zshrc
    ln -sfn $HOME/.dotfiles/gitconfig $HOME/.gitconfig
  fi
}

# Install Xcode themes
function installXcodeThemes() {
  ./Scripts/XcodeThemes/install-xcode-themes
}

# Setup macOS Preferences
function setupPrefs() {
  ./Scripts/Prefs/setup-macos-prefs
}

# Restore Dock Elements
function restoreDock() {
  printMessage "*** Restoring the Dock elements"
  cp Scripts/Prefs/com.apple.dock.plist ~/Library/Preferences/
  killall "Dock"
}

function installOhMyZsh() {
  printMessage "*** Installing Oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
}

function setupGitConfig() {
  printMessage "*** Creating basic .gitconfig file"
  read -p 'Name: ' namevar
  read -p 'Email: ' emailvar
  echo "[user]
	name = $namevar
	email = $emailvar
[mergetool]
	keepBackup = true" > Scripts/dotfiles/gitconfig
}

function start() {
  # Ask for the administrator password upfront
  printMessage "*** Enter admin password:"
  sudo -v

  # Keep-alive: update existing `sudo` time stamp until `.setup` has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

  setupHomebrew;
  installXcode;
  installHomebrewDependencies;
  installOhMyZsh;
  copyDotfilesDir;
  setupSimLinks;
  installXcodeThemes;
  setupPrefs;
  restoreDock;
  printMessage "*** Finished."
}

printMessage "*** Setting up your Computer..."

# Initial prompt
if [ "$1" == "--force" -o "$1" == "-f" ]; then
	start;
else
	read -p "This may overwrite existing files in your home directory. Do you want to continue? (y/n) " -n 1
	printMessage ""
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		start;
	fi
fi
