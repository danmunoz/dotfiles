#! /usr/bin/env bash

# dirname="$(dirname "$0")"

# Check for Homebrew and install if we don't have it
function setupHomebrew() {
  if ! command -v brew >/dev/null; then
    echo "*** Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  else
    echo "*** Homebrew already installed, updating"
    brew update
  fi
}

# Install Xcode
function installXcode() {
  echo "*** Installing mas-cli"
  brew install mas
  echo "*** Installing Xcode from Mac App Store"
  mas install 497799835
  echo "*** Enter password to accept xcodebuild license:"
  sudo xcodebuild -license accept 
}

# Install Homebrew dependencies
function installHomebrewDependencies() {
  echo "*** Install Homebrew dependencies"
  brew bundle
}

function copyDotfilesDir() {
  echo "*** Copying .dotfiles dir"
	 rsync --exclude ".git/" \
	 	--exclude ".DS_Store" \
	 	-avh --no-perms dotfiles/ ~/.dotfiles;
}

function setupSimLinks() {
  echo "*** Setting up SymLinks"
  
  read -p "This operation will replace existing zshrc and gitconfig files. Do you wish to continue? (y/n) " -n 1
  echo ""
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    ln -sfn $HOME/.dotfiles/zshrc $HOME/.zshrc
    ln -sfn $HOME/.dotfiles/gitconfig $HOME/.gitconfig
  fi
}

# Install Xcode themes
function installXcodeThemes() {
  ./XcodeThemes/install-xcode-themes
}

# Setup macOS Preferences
function setupPrefs() {
  ./Prefs/setup-macos-prefs
}

# Restore Dock Elements
function restoreDock() {
  echo "*** Restoring the Dock elements"
  cp Prefs/com.apple.dock.plist ~/Library/Preferences/
  killall "Dock"
}

function installOhMyZsh() {
  echo "*** Installing Oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
}

function start() {
  setupHomebrew;
  installXcode;
  installHomebrewDependencies;
  copyDotfilesDir;
  setupSimLinks;
  installXcodeThemes;
  # setupPrefs;
  # restoreDock;
  # installOhMyZsh;
  echo "*** Finished."
}

echo "*** Setting up your Computer..."

# Initial prompt
if [ "$1" == "--force" -o "$1" == "-f" ]; then
	start;
else
	read -p "This may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1
	echo ""
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		start;
	fi
fi
